services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - "8000"
    env_file:
      - .env.production
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/alfa.kyrexi.tech.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./nginx/logs:/var/log/nginx
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - backend

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: '/bin/sh -c ''trap exit TERM; while :; do certbot renew --deploy-hook "nginx -s reload"; sleep 12h & wait $${!}; done;'''
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  certbot_conf:
  certbot_www:
